Модифицируем приложение

Теперь мы с тобой приступим к решению практической задачи, в которой нам будет 
важно контролировать количество человек в помещении. Тем более что во время
ограничительных мер, связанных с COVID-19, это не просто интересно, но еще и актуально.

Чтобы задача была на "живом примере", мы пользуемся публичной камерой, установленной
в одном из барбершопов Лондона. Из-за его скромной площади находиться внутри может не больше
десяти человек.

Чтобы решить эту задачу, достаточно добавить функцию, которая будет обрабатывать видео
по кадрам и выводить результат обработки на экран.Чтобы не нагружать устройство обработкой
каждого кадра, обновление экрана будет происходить по нажатии клавиши. На мощных компьютерах
это необязательно.

def start_video_object_detection():
	"""
	Захват и анализ в режиме реального времени
	"""
	while True:
		try:
			#Захват картинки с видео
			video_camera_capture =
				cv2.VideoCapture("http://81.13.136.82:82/mjpg/video.mjpg")
			
			while video_camera_capture.isOpened():
				ret, frame = video_camera_capture.read()
				if not ret:
					break
				
				#Применение методов распознавания объектов на кадре видео от YOLO
				frame = apply_yolo_object_detection(frame)

				#Вывод обработанного изображения на экран с уменшением размера окна
				frame = cv2.resize(frame, (1920//2,1080//2))
				cv2.imshow("Video Capture", frame)
				if cv2.waitKey(0):
					breaak
			video_camera_capture.release()
		except KeyboardInterrupt:
			pass
Также нам потребуется немного модифицировать функцию main, чтобы теперь запускать обработку
видео вместо обработки изображения.

if name main '·
# Загрузка весов YOLO из файлов и настройка сети
net = cv2.dпn.readNetFromDarknet("yolov4-tiny.cfg", "yolov4-tiny.weights")
layer_names = net.getLayerNames()
out layers indexes = net.getUnconnectedOutLayers()
out layers = [layer_names[index[O] - 1) for index in out layers_indexes]
# Загрузка из файла классов объектов, которые умеет обнаруживать YOLO
with open("coco.names.txt") as file:
classes = file.read() .split("\n")
# Определение классов, которые будут приоритетными для поиска на изображении
#Названия находятся в файле coco.names.txt
# В данном случае определяется грузовик для прохождения САРТСНА и человек для
анализа видео
classes to look_for = ["truck", "person"]
start_video_object_detection()
Получаем результат: шесть из семи человек были распознаны

Можно добавить и другие nолезные функции: наnример, отnравлять на nочту или
в Telegram сообщение о том, что в барбершоn набилось многовато людей. 
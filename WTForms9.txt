Валидаторы.

Еще один вопрос, ответ на который ты наверняка уже понял по контексту: как работает
функция form.validate()? Она проверяет как раз те самые списки валидаторов с параметрами,
которые мы указывали при определении класса формы. Давай попробуем позаполнять различные
значения в строковых полях, которые в реальном приложении в нашу форму будет предоставлять
с клиента пользователь, и посмотрим, как среагирует валидатор.

form = UserForm()

form.first_name.data = "Jahnny"
form.last_name.data = "Doe"
form.email.data = "invalid_email"
form.password.data = "super-secret-pass"

Попробуем валидировать эту форму.

form.validate()

Fals

Валидалиция не прошла. Ты помнишь, что в каждом поле есть список errors, который
будет содержать ошибки, если они произойдут при заполнении формы. Посмотрим на них

form.first_name.errors

Все правильно, в первом поле ошибок не было, список валидаторов 
(validators.Length(min=5, max=30)) пройден, т.к. имя Johnny удовлетворяет единственному
валидатору. Посмотрим другие.

form.last_name.errors

['Field must be between 5 and 30 characters long.']

form.email.errors

['Invalid email address.']

form.password.errors

[]

Во втором и третьем случаях сработали валидаторы, а наш шаблон (ниже) выведет список ошибок.

{% if form.first_name.errors %}
	<ul class="errors">
		{% for error in form.first_name.errors %}
			<li>{{error}}</li> 
		{% endfor %}
	</ul>
{% endif %}

Разумеется, чтобы все сработало, для повторного дозаполнения формы тебе нужно передавать
этот же самый инстанс формы в шаблонизатор, а не создать новый.
Кроме списка ошибок он будет содержать предзаполненные поля с предыдущей попытки, так что
пользователю не придется вводить все по новой.

С полным списком встроенных валидаторов можно ознакомитсья здесь: 
https://wtforms.readthedocs.io/en/stable/validators/#built-in-validators,
а если их  не хватит то WTForms позволяет определить и собственные 
(https://wtforms.readthedocs.io/en/stable/validators/#custom-validators)

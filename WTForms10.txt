ƒинамическое изменение свойств полей формы

“ы уже знаешь, что у полей формы есть набор общих атрибутов, которые можно указать 
у всех классов полей. Ќапример, описание, которое идет первым позиционным аргументом
в любом поле. ƒругие примеры:

- id - атрибут ID HTML-виджета при рендеринге;
- name - им€ виджета (свойство name в HTML), по которому будет делатьс€ сопоставление;
- ошибки, валидаторы и т.д.

¬се это возможно благодар€ тому, что все классы полей наследуютс€ от базовго класса
wtforms.fields.Field (https://wtforms.readthedocs.io/en/stable/filds/#the-field-base-class).

ќднако иногда может так случитьс€, что в уже определенной форме нужно помен€ть значение 
одного из полей. —лучаи бывают разные.

- ƒл€ одного из строковых полей нужно установить дефолтное значение.

- ƒл€ второго пол€ нужно просто добавить класс при рентеринге, потому что одна и та же форма
используетс€ во многих местах в приложении. » в этом нужен особый класс.

- ≈ще дл€ одного пол€ нужен ata-атрибут дл€ клиентского кода со строкой, содержащий 
API-endpoint дл€ динамического фетчинга данных.

¬се эти моменты лучше настраивать пр€мо перед самым рендерингом формы у готового инстанс€ формы:
совершенно незачем тащить это в определение класса. Ќо как это сделать?
¬спомним, что наша форма - это обычный Python-объект и мы можем управл€ть его атрибутами!

«ададим дефолтное значение пол€ first_name (другой вариант - через default):

form.first_name.data = 'Linus'

” пол€ любого класса есть словарь render_kw. ќн предоставл€ет список атрибутов,
которые будут отрендерены в HTML-теге (виджете).

#“еперь поле хорошо выгл€дит с Bootstrap!
form.last_name.render_kw['class'] = 'form-control'

Ќу и зададим кастомный data-атрибут дл€ проверки на дублирование аккаунта:
form.users.render_kw['data-url'] = request.app.router['api_users_search'.url_for()
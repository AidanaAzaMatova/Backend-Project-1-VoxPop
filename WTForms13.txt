 астомные виджеты и расширени€

ѕример выше может показатьс€ частным, однако он подводит к важной проблеме.
’орошо, что наша задача решаетс€ плагином Select2, который позвол€ет буквально 
добавлением одного класса и щепотки JS получить необходимую функциональность.
ќднако как быть, если нам нужен полностью собственный шаблон дл€ пол€ или даже
полностью свое сложное поле с кастомным шаблоном, поведением и валидаторами?

  счастью, WTForms позвол€ет создавать нам собственные виджеты (классы-генераторы
HTML-шаблонов дл€ рендеринга полей). ћы можем сделать это двум€ способами:

- —оздать собственный на базе существующего (class CustomWidget(TextInput):),
расширив его поведение и переопределив методы, включа€ __call__. Ќапример, обернуть
в дополнительный HTML-шаблон.

- —оздать полностью собственный виджет, не наследу€сь от существующих встроенных.

—писок встроенных виджетов можно найти здесь (https://wtforms.readthedocs.io/en/stable/
widgets/#custom-widgets).

»нтегрировать собственный виджет тоже несложно. ” каждого пол€ есть атрибут widget.
ћы можем указать наш виджет в качестве этого keyword-аргумента при определении пол€ 
в классе формы или, если кастомный виджет нужен не всегда, присваивать его полю динамически.

 роме кастомных виджетов мы можем создавать полностью кастомные пол€. ѕримером такого пол€
служит расширение WTForms-JSON (https://wtforms-json.readthedocs.io/en/latest), которое
пригодитс€ дл€ обработки JSON-полей моделей. ќпределить собственное поле также возможно,
соответствующий пример ты найдешь в документации (https://wtforms.readthedocs.io/en/stable/
fields/#custom-fields).
Делаем полноценный reverse shell
От обучающих примеров переходим к реальной задаче – разработке обратного шелла, который позволит выполнять команды на захваченной удаленной машине.
При этом добавить нам нкжно только вызов функции subprocess. Что это такое? В Python есть модуль subprocess, чтобы запустить блокнот.
import subprocedd
subprocess.call(‘notepad.exe’)

Здесь метод call() вызывает (запускает) указанную программу.
Переходим к разработке шелла. В данном случае сторона сервера будет атакующей (т.е наш компьютер), а сторона клиента – атакованной машиной. Именно поэтому шелл называется обратным.

Если ты не поймешь этот двухстрочный код зачем ты тогда учишься разбор делать не буду. В голове сформируй и все. Это же нечто каждую елементарную часть будешь разбирать. Так нельзя. Должен же быть хотб какое то движение с мертвой точки.